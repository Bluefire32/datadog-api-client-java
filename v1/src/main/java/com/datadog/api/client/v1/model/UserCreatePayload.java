/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.client.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UserCreatePayload
 */

public class UserCreatePayload {
  /**
   * Gets or Sets accessRole
   */
  @JsonAdapter(AccessRoleEnum.Adapter.class)
  public enum AccessRoleEnum {
    ST("st"),
    
    ADM("adm"),
    
    RO("ro");

    private String value;

    AccessRoleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AccessRoleEnum fromValue(String value) {
      for (AccessRoleEnum b : AccessRoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AccessRoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccessRoleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AccessRoleEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AccessRoleEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ACCESS_ROLE = "access_role";
  @SerializedName(SERIALIZED_NAME_ACCESS_ROLE)
  private AccessRoleEnum accessRole;

  public static final String SERIALIZED_NAME_HANDLE = "handle";
  @SerializedName(SERIALIZED_NAME_HANDLE)
  private String handle;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public UserCreatePayload accessRole(AccessRoleEnum accessRole) {
    this.accessRole = accessRole;
    return this;
  }

   /**
   * Get accessRole
   * @return accessRole
  **/
  @ApiModelProperty(example = "st", value = "")
  public AccessRoleEnum getAccessRole() {
    return accessRole;
  }

  public void setAccessRole(AccessRoleEnum accessRole) {
    this.accessRole = accessRole;
  }

  public UserCreatePayload handle(String handle) {
    this.handle = handle;
    return this;
  }

   /**
   * Get handle
   * @return handle
  **/
  @ApiModelProperty(example = "test@datadoghq.com", required = true, value = "")
  public String getHandle() {
    return handle;
  }

  public void setHandle(String handle) {
    this.handle = handle;
  }

  public UserCreatePayload name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "test user", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserCreatePayload userCreatePayload = (UserCreatePayload) o;
    return Objects.equals(this.accessRole, userCreatePayload.accessRole) &&
        Objects.equals(this.handle, userCreatePayload.handle) &&
        Objects.equals(this.name, userCreatePayload.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessRole, handle, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserCreatePayload {\n");
    sb.append("    accessRole: ").append(toIndentedString(accessRole)).append("\n");
    sb.append("    handle: ").append(toIndentedString(handle)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

